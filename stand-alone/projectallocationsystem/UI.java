/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projectallocationsystem;

import java.awt.Desktop;
import java.io.File;
import java.text.MessageFormat;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.text.*;
import java.awt.print.*;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.util.Set;
import java.util.Vector;
import java.text.*;
import java.awt.print.*;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Olympians
 */
public class UI extends javax.swing.JFrame {

    private PipedInputStream pin;
    private BufferedReader iis;
    private PrintStream ps;

    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();
    }

      private String path = "";
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtpath = new javax.swing.JTextField();
        btnbrowse = new javax.swing.JButton();
        TPane = new javax.swing.JTabbedPane();
        solpanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        fitnessTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        energyTxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        executeBtn = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        textArea1 = new java.awt.TextArea();
        btnprint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Project Allocation System");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(1100, 700));
        setResizable(false);

        txtpath.setEditable(false);
        txtpath.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        txtpath.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtpath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpathActionPerformed(evt);
            }
        });

        btnbrowse.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        btnbrowse.setText("Browse");
        btnbrowse.setPreferredSize(new java.awt.Dimension(73, 20));
        btnbrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbrowseActionPerformed(evt);
            }
        });

        TPane.setAutoscrolls(true);
        TPane.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Fitness of Final Solution");
        jLabel3.setPreferredSize(new java.awt.Dimension(72, 15));

        fitnessTxt.setEditable(false);
        fitnessTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        fitnessTxt.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Student Name", "Assigned Project ", "Rank Evaluation"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setFocusable(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout solpanelLayout = new javax.swing.GroupLayout(solpanel);
        solpanel.setLayout(solpanelLayout);
        solpanelLayout.setHorizontalGroup(
            solpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, solpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(solpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, solpanelLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addComponent(fitnessTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        solpanelLayout.setVerticalGroup(
            solpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(solpanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(solpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fitnessTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        TPane.addTab("Genetic Algorithm", solpanel);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Energy of Final Solution");

        energyTxt.setEditable(false);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Student Name", "Assigned Project", "Rank Evaluation"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setMaximumSize(new java.awt.Dimension(2147483647, 192));
        jTable2.setMinimumSize(new java.awt.Dimension(45, 192));
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(energyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(energyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TPane.addTab("Simulated Annealing", jPanel2);

        executeBtn.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        executeBtn.setText("Execute");
        executeBtn.setPreferredSize(new java.awt.Dimension(73, 20));
        executeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeBtnActionPerformed(evt);
            }
        });

        jScrollPane5.setViewportView(textArea1);

        btnprint.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        btnprint.setText("Print Report");
        btnprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnprintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TPane)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtpath, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnbrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(executeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnprint)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtpath, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnbrowse, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(executeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnprint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(TPane, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtpathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpathActionPerformed

    private void btnbrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbrowseActionPerformed
        try {
            JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("tsv files", "tsv");
        fc.setFileFilter(filter);
        fc.showOpenDialog(null);
        File file = fc.getSelectedFile();
//        if (file == null){
//            JOptionPane.showMessageDialog(rootPane, "File Is Empty","Error",
//    JOptionPane.ERROR_MESSAGE);
//        }
        path = file.getAbsolutePath();
        txtpath.setText(path);
        } catch (Exception e) {
            System.out.println("Browse Canceled by User");
        }
    }//GEN-LAST:event_btnbrowseActionPerformed

    private void setLogPane() {
        //Create a pair of Piped Streams.
        pin = new PipedInputStream();
        PipedOutputStream pout;
        try {
            pout = new PipedOutputStream(this.pin);
            iis = new BufferedReader(new InputStreamReader(pin));
            ps = new PrintStream(pout, true);
            System.setOut(ps);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null,
                    "*** Input or Output error ***\n" + e, "Error",
                    JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
  
        //Construct and start a Thread to copy data from "is" to "os".
        new Thread() {
            public void run() {
                try {
                    String line;
                    while ((line = iis.readLine()) != null) {
                        textArea1.append(line);
                        textArea1.append("\n");
                    }
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null,
                            "*** Input or Output error ***\n" + ex, "Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        }.start();
    }
    
    private void executeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeBtnActionPerformed
        if (path != "") {
            setLogPane();
            String filename                             = path;
            PreferenceTable preferenceTable             = new PreferenceTable(filename);
            preferenceTable.fillPreferencesOfAll(10);
            
            
            // Do Anealing with Simulated Anealing
            CandidateSolution solInstance               = new CandidateSolution(preferenceTable);
            SimulatedAnnealing saInstance               = new SimulatedAnnealing(solInstance);
            CandidateSolution saSol                     = saInstance.getModifiedBestSolution();
            Vector<Vector<String>> saDataSet = new Vector<Vector<String>>();

            Set<String> saSolKeySet = saSol.getCandidateAssignmentsMap().keySet();
            java.util.Iterator<String> saSolIterator = saSolKeySet.iterator();
            while(saSolIterator.hasNext()){
                String studentName = saSolIterator.next();
                CandidateAssignment cand = saSol.getCandidateAssignmentsMap().get(studentName);
                
                String assignedProject  = cand.getAssignedProject();
                int ranking             = cand.getStudentEntry().getRanking(assignedProject) + 1;
               // String rankingToString  = Integer.toString(ranking);
                Vector<String> rowDataSet      = new Vector<String>();
                rowDataSet.add(studentName);
                rowDataSet.add(assignedProject);
                if(ranking == 0 || ranking >= cand.getStudentEntry().getNumberOfPreferencedProjects()){
                    if (cand.getStudentEntry().hasPreassignedProject()) {
                        String rankingToString = " Pre-assigned project" ;
                        rowDataSet.add(rankingToString);
                    } else {
                        String rankingToString = " Project not in the preference list" ;
                        rowDataSet.add(rankingToString);
                    }
                } else {
                    rowDataSet.add(" Project : " + Integer.toString(ranking));
                }
                //rowDataSet.add(rankingToString);
                saDataSet.add(rowDataSet);
            }

            Vector<String> columnNameDataSet    = new Vector<String>();
            columnNameDataSet.add("Student Name");
            columnNameDataSet.add("Assigned Project");
            columnNameDataSet.add("Rank in project list");

            DefaultTableModel saTableDataModel = new DefaultTableModel(saDataSet, columnNameDataSet);
            jTable2.setModel(saTableDataModel);
            
            
            
            //Do anealing with Genetic Algorithm
            GeneticAlgorithm gaSolution                 = new GeneticAlgorithm(10, preferenceTable);
            CandidateSolution gaSol                     = gaSolution.getFittestSolution();
            Vector<Vector<String>> gaDataSet            = new Vector<Vector<String>>();

            Set<String> gaSolKeySet = gaSol.getCandidateAssignmentsMap().keySet();
            java.util.Iterator<String> gaSolIterator = gaSolKeySet.iterator();
            while(gaSolIterator.hasNext()){
                String studentName = gaSolIterator.next();
                CandidateAssignment cand = gaSol.getCandidateAssignmentsMap().get(studentName);
                
                
                String assignedProject  = cand.getAssignedProject();
                int ranking             = cand.getStudentEntry().getRanking(assignedProject) + 1;
               // String rankingToString  = Integer.toString(ranking);
                Vector<String> rowDataSet      = new Vector<String>();
                rowDataSet.add(studentName);
                rowDataSet.add(assignedProject);
                if(ranking == 0 || ranking >= cand.getStudentEntry().getNumberOfPreferencedProjects()){
                    if (cand.getStudentEntry().hasPreassignedProject()) {
                        String rankingToString = " Pre-assigned project" ;
                        rowDataSet.add(rankingToString);
                    } else {
                        String rankingToString = " Project not in the preference list" ;
                        rowDataSet.add(rankingToString);
                    }
                } else {
                    rowDataSet.add(" Project : " + Integer.toString(ranking));
                }
                //rowDataSet.add(rankingToString);
                gaDataSet.add(rowDataSet);
            }

            DefaultTableModel gaTableDataModel = new DefaultTableModel(gaDataSet, columnNameDataSet);
            jTable1.setModel(gaTableDataModel);
            
            fitnessTxt.setText((Integer.toString(gaSol.getFitness())));
            energyTxt.setText(Integer.toString(saSol.getEnergy()));
          
        } else {
            JOptionPane.showMessageDialog(rootPane, "tsv file not found","Error",
    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_executeBtnActionPerformed

    private void btnprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnprintActionPerformed
         MessageFormat gaHeader = new MessageFormat("Genetic Algorithm Report - Final Fitness: "+ fitnessTxt.getText());
         MessageFormat gaFooter = new MessageFormat("Genetic Algorithm");
         MessageFormat saHeader = new MessageFormat("Simulated Annealing Report - Final Energy: "+ energyTxt.getText());
         MessageFormat saFooter = new MessageFormat("Simulated Annealing");
        
                try {
                  if(path != ""){
                      TPane.setSelectedIndex(1);
                      jTable1.print(JTable.PrintMode.FIT_WIDTH,gaHeader,gaFooter);
                      jTable2.print(JTable.PrintMode.FIT_WIDTH,saHeader,saFooter);
                      
                                                    
                  }else {
                       JOptionPane.showMessageDialog(rootPane, "tsv file not found","Error",
    JOptionPane.ERROR_MESSAGE);
                  }
                   
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnprintActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("GTK+".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                } else if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                } else if ("Macintosh*".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane TPane;
    private javax.swing.JButton btnbrowse;
    private javax.swing.JButton btnprint;
    private javax.swing.JTextField energyTxt;
    private javax.swing.JButton executeBtn;
    private javax.swing.JTextField fitnessTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel solpanel;
    private java.awt.TextArea textArea1;
    private javax.swing.JTextField txtpath;
    // End of variables declaration//GEN-END:variables
}
